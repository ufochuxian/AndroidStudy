plugins {
    id 'com.android.application'
    id 'kotlin-android'
}

android {
    compileSdkVersion 35

    defaultConfig {
        applicationId "com.eric.androidstudy"
        minSdkVersion 25
        targetSdkVersion 34
        //renderscript 兼容配置;
        renderscriptTargetApi 14
        renderscriptSupportModeEnabled  true
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        javaCompileOptions {
            annotationProcessorOptions {
                //用于向AbstractProcessor传参数
                arguments = [moduleName: "CustomApt"]
            }
        }
    }

    externalNativeBuild {
        cmake {
            path "src/main/cpp/CMakeLists.txt"
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        viewBinding true
    }
    namespace 'com.eric.androidstudy'
}

dependencies {
    api(project(':base-library'))
    implementation 'androidx.exifinterface:exifinterface:1.3.6'
    implementation 'androidx.test.ext:junit-ktx:1.2.1'


    //为了在编译期间调用AbstractProcessor的init和process方法，自动生成java代码，这里需要使用annotationProcessor
    annotationProcessor project(':router-compiler')

    // AndroidX Test 核心库
    androidTestImplementation 'androidx.test:core:1.5.0'

    // JUnit4 支持（包含 AndroidJUnit4）
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'

    // Espresso 测试框架（UI 测试）
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'


}

class CustomPlugin implements Plugin<Project> {
    @Override
    void apply(Project target) {
        target.task("showCustomPlugin") {
            doLast {
                println("this is custom plugin")
            }
        }
    }
}